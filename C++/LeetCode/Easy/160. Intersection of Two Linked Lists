/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode* curA = headA;
        ListNode* curB = headB;
        int counterA = 0;
        int counterB = 0;

        while (curA){
            curA = curA->next;
            counterA++;
        }
        while (curB){
            curB = curB->next;
            counterB++;
        }    

        curA = headA;
        curB = headB;

        ListNode*& bigerList = (counterA > counterB) ? curA : curB;
        int difference = abs(counterA-counterB);
        for (int i = 0; i<difference; i++){
            bigerList=bigerList->next;
        }

        while (curA){

            if (curA == curB){return curA;}
            curA = curA->next;
            curB = curB->next;
        }
        return nullptr;


    }
};
